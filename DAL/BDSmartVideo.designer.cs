#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BDSmartVideo")]
	public partial class BDSmartVideoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertStatistiques(Statistiques instance);
    partial void UpdateStatistiques(Statistiques instance);
    partial void DeleteStatistiques(Statistiques instance);
    partial void InsertUtilisateur(Utilisateur instance);
    partial void UpdateUtilisateur(Utilisateur instance);
    partial void DeleteUtilisateur(Utilisateur instance);
    partial void InsertHit(Hit instance);
    partial void UpdateHit(Hit instance);
    partial void DeleteHit(Hit instance);
    #endregion
		
		public BDSmartVideoDataContext() : 
				base(global::DAL.Properties.Settings.Default.BDSmartVideoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BDSmartVideoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDSmartVideoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDSmartVideoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDSmartVideoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Location> Location
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<Statistiques> Statistiques
		{
			get
			{
				return this.GetTable<Statistiques>();
			}
		}
		
		public System.Data.Linq.Table<Utilisateur> Utilisateur
		{
			get
			{
				return this.GetTable<Utilisateur>();
			}
		}
		
		public System.Data.Linq.Table<Hit> Hit
		{
			get
			{
				return this.GetTable<Hit>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Location")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Username;
		
		private string _IdFilm;
		
		private System.DateTime _DateDebut;
		
		private System.DateTime _DateFin;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnIdFilmChanging(string value);
    partial void OnIdFilmChanged();
    partial void OnDateDebutChanging(System.DateTime value);
    partial void OnDateDebutChanged();
    partial void OnDateFinChanging(System.DateTime value);
    partial void OnDateFinChanged();
    #endregion
		
		public Location()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFilm", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string IdFilm
		{
			get
			{
				return this._IdFilm;
			}
			set
			{
				if ((this._IdFilm != value))
				{
					this.OnIdFilmChanging(value);
					this.SendPropertyChanging();
					this._IdFilm = value;
					this.SendPropertyChanged("IdFilm");
					this.OnIdFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDebut", DbType="Date NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime DateDebut
		{
			get
			{
				return this._DateDebut;
			}
			set
			{
				if ((this._DateDebut != value))
				{
					this.OnDateDebutChanging(value);
					this.SendPropertyChanging();
					this._DateDebut = value;
					this.SendPropertyChanged("DateDebut");
					this.OnDateDebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFin", DbType="Date NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime DateFin
		{
			get
			{
				return this._DateFin;
			}
			set
			{
				if ((this._DateFin != value))
				{
					this.OnDateFinChanging(value);
					this.SendPropertyChanging();
					this._DateFin = value;
					this.SendPropertyChanged("DateFin");
					this.OnDateFinChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Statistiques")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Statistiques : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IdType;
		
		private int _Position;
		
		private System.DateTime _DateStat;
		
		private string _TypeData;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTypeChanging(string value);
    partial void OnIdTypeChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    partial void OnDateStatChanging(System.DateTime value);
    partial void OnDateStatChanged();
    partial void OnTypeDataChanging(string value);
    partial void OnTypeDataChanged();
    #endregion
		
		public Statistiques()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdType", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string IdType
		{
			get
			{
				return this._IdType;
			}
			set
			{
				if ((this._IdType != value))
				{
					this.OnIdTypeChanging(value);
					this.SendPropertyChanging();
					this._IdType = value;
					this.SendPropertyChanged("IdType");
					this.OnIdTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStat", DbType="Date NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime DateStat
		{
			get
			{
				return this._DateStat;
			}
			set
			{
				if ((this._DateStat != value))
				{
					this.OnDateStatChanging(value);
					this.SendPropertyChanging();
					this._DateStat = value;
					this.SendPropertyChanged("DateStat");
					this.OnDateStatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeData", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string TypeData
		{
			get
			{
				return this._TypeData;
			}
			set
			{
				if ((this._TypeData != value))
				{
					this.OnTypeDataChanging(value);
					this.SendPropertyChanging();
					this._TypeData = value;
					this.SendPropertyChanged("TypeData");
					this.OnTypeDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilisateur")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Utilisateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserName;
		
		private string _Password;
		
		private string _Nom;
		
		private string _Prenom;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    #endregion
		
		public Utilisateur()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hit")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Hit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdType;
		
		private string _TypeData;
		
		private System.DateTime _DateHit;
		
		private int _Hits;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTypeChanging(int value);
    partial void OnIdTypeChanged();
    partial void OnTypeDataChanging(string value);
    partial void OnTypeDataChanged();
    partial void OnDateHitChanging(System.DateTime value);
    partial void OnDateHitChanged();
    partial void OnHitsChanging(int value);
    partial void OnHitsChanged();
    #endregion
		
		public Hit()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdType", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int IdType
		{
			get
			{
				return this._IdType;
			}
			set
			{
				if ((this._IdType != value))
				{
					this.OnIdTypeChanging(value);
					this.SendPropertyChanging();
					this._IdType = value;
					this.SendPropertyChanged("IdType");
					this.OnIdTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeData", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TypeData
		{
			get
			{
				return this._TypeData;
			}
			set
			{
				if ((this._TypeData != value))
				{
					this.OnTypeDataChanging(value);
					this.SendPropertyChanging();
					this._TypeData = value;
					this.SendPropertyChanged("TypeData");
					this.OnTypeDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateHit", DbType="Date NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime DateHit
		{
			get
			{
				return this._DateHit;
			}
			set
			{
				if ((this._DateHit != value))
				{
					this.OnDateHitChanging(value);
					this.SendPropertyChanging();
					this._DateHit = value;
					this.SendPropertyChanged("DateHit");
					this.OnDateHitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hits", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Hits
		{
			get
			{
				return this._Hits;
			}
			set
			{
				if ((this._Hits != value))
				{
					this.OnHitsChanging(value);
					this.SendPropertyChanging();
					this._Hits = value;
					this.SendPropertyChanged("Hits");
					this.OnHitsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
